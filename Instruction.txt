REGISTER (R)	2ND. REGISTER (L)	CODE		VALUE (V)	DESCR

[0-5]		NONE			00		YES		charge la valeur V dans R 					(V -> R)
[0-5]		[0-5]			01		NO		charge la valeur contenue dans L dans R 			(L -> R)
NONE		[0-5]			02		NO		charge L dans ACC 						(L -> ACC)
NONE		NONE			03		YES		charge V dans ACC 						(V -> ACC)
[0-5]		NONE			04		YES		additionne ACC et V et met le resultat dans R			(ACC + V -> R)
[0-5]		[0-5]			05		NO		additionne ACC et L et met le resultat dans R			(ACC + L -> R)
[0-5]		NONE			06		YES		soustrait ACC et V et met le resultat dans R			(ACC - V -> R)
[0-5]		[0-5]			07		NO		soustrait ACC et L et met le resultat dans R			(ACC - L -> R)

NONE		[0-5]			08		YES		sauvegarde le registre L en ram a l'addresse V			(L -> ram[V])
[0-5]		NONE			09		YES		charge la valeur en ram a l'addresse V et la met dans R		(ram[V] -> R)

NONE		NONE			0A		NO		reset IC (instruction counter)					(0 -> IC)
[0-5]		NONE			0B		NO		met la valeur IC dans R						(IC -> R)

NONE		NONE			37		YES		charge la valeur V dans PC					(V -> PC)	
NONE		NONE			38		YES		charge la valeur V dans C_ACC					(C -> C_ACC)
NONE		[0-5]			39		NO		charge la valeur L dans C_ACC					(L -> C_ACC)
NONE		[0-5]			3A		YES		met PC avec la valeur V	si L < C_ACC				(si L < C_ACC, V -> PC)
NONE		[0-5]			3B		YES		met PC avec la valeur V si L <= C_ACC				(si L <= C_ACC, V -> PC)
NONE		[0-5]			3C		YES		met PC avec la valeur V si L == C_ACC				(si L == C_ACC, V -> PC)
NONE		[0-5]			3D		YES		met PC avec la valeur V	si L != C_ACC				(si L != C_ACC, V -> PC)
NONE		[0-5]			3E		YES		met PC avec la valeur V si L >= C_ACC				(si L >= C_ACC, V -> PC)
NONE		[0-5]			3F		YES		met PC avec la valeur V si L > C_ACC				(si L > C_ACC, V -> PC)